:root {
  --bg-color: #249087;
  --fg-color: #7DDFD6;
  --btn-color: #7DDFD6;
  --btn-stop-color: #C00000;
  --text-color: #ffffff;
  --placeholder-color: #333333;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
}

body {
  width: 300px;
  background-color: var(--bg-color);
  color: var(--text-color);
  padding: 15px;
  margin: 0;
  animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.container {
  display: flex;
  flex-direction: column;
  gap: 25px;
}

h1 {
  font-size: 28px;
  text-align: center;
  margin-bottom: 20px;
  color: var(--text-color);
  padding-top: 5px;
}

.setting-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 8px;
  margin-bottom: 5px;
}

.setting-row label {
  font-size: 18px;
  flex: 1;
  white-space: nowrap;
  font-weight: bold;
}

.setting-input {
  background-color: var(--fg-color);
  border: none;
  border-radius: 4px;
  padding: 8px 10px;
  font-size: 16px;
  text-align: center;
  width: 120px;
  color: var(--bg-color);
  transition: all 0.2s ease-in-out;
  position: relative;
  overflow: hidden;
}

/* 输入时的波纹效果 */
.setting-input:focus::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.1);
  animation: ripple 0.6s ease-out;
}

@keyframes ripple {
  0% { transform: scale(0); opacity: 0.3; }
  100% { transform: scale(2); opacity: 0; }
}

/* 去掉输入框选中后的黑色描边 */
.setting-input:focus {
  outline: none;
  transform: scale(1.03);
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
}

.unit {
  font-size: 16px;
  margin-left: 5px;
}

.checkbox-container {
  position: relative;
  width: 36px;
  height: 36px;
  display: flex;
  justify-content: center;
  align-items: center;
}

input[type="checkbox"] {
  opacity: 0;
  width: 0;
  height: 0;
}

.checkbox-label {
  position: absolute;
  top: 0;
  left: 0;
  width: 36px;
  height: 36px;
  background-color: var(--fg-color);
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  justify-content: center;
  align-items: center;
}

.checkbox-label:hover {
  transform: scale(1.05);
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
}

input[type="checkbox"]:checked + .checkbox-label {
  background-color: var(--fg-color);
  position: relative;
}

input[type="checkbox"]:checked + .checkbox-label::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 16px;
  border: solid var(--bg-color);
  border-width: 0 3px 3px 0;
  transform: translate(-50%, -60%) rotate(45deg);
  animation: checkmark 0.2s ease-in-out;
}

@keyframes checkmark {
  0% { transform: rotate(45deg) scale(0); }
  100% { transform: rotate(45deg) scale(1); }
}

#reset-btn {
  background-color: var(--fg-color);
  border: none;
  border-radius: 4px;
  padding: 8px 10px;
  font-size: 14px;
  cursor: pointer;
  color: var(--bg-color);
  font-weight: bold;
  margin-left: 10px;
  width: 70px;
  transition: all 0.2s ease;
}

#reset-btn:hover {
  transform: scale(1.05);
}

#toggle-btn {
  width: 100%;
  padding: 12px;
  font-size: 24px;
  font-weight: bold;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin-top: 15px;
  transition: all 0.3s ease;
}

.start-btn {
  background-color: var(--fg-color);
  color: var(--bg-color);
}

.start-btn:hover {
  transform: scale(1.02);
}

.stop-btn {
  background-color: var(--btn-stop-color);
  color: white;
}

.stop-btn:hover {
  transform: scale(1.02);
}

.captured-count {
  background-color: var(--fg-color);
  border-radius: 4px;
  padding: 8px 10px;
  font-size: 16px;
  text-align: center;
  width: 120px;
  color: var(--bg-color);
}

.hidden {
  display: none;
}

/* 确保输入框在只读状态下也有正确的样式 */
input[readonly] {
  cursor: default;
}

/* 确保按钮在悬停时有反馈 */
button:hover {
  opacity: 0.9;
}

button:active {
  transform: translateY(1px);
}

.status-indicator {
  text-align: center;
  padding: 8px;
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 4px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

#statusText {
  font-weight: bold;
}

.settings {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.directory-selector {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 16px;
}

.directory-selector input {
  flex-grow: 1;
  padding: 6px 8px;
  border: none;
  border-radius: 4px 0 0 4px;
  background-color: var(--fg-color);
  color: var(--bg-color);
}

.directory-selector input::placeholder {
  color: var(--placeholder-color);
}

input[type="text"] {
  flex-grow: 1;
  padding: 8px;
  border: none;
  border-radius: 4px;
  background-color: var(--fg-color);
  color: var(--bg-color);
}

.btn-set {
  background-color: var(--fg-color);
  color: var(--bg-color);
  border: none;
  border-radius: 0 4px 4px 0;
  padding: 8px 12px;
  cursor: pointer;
  font-weight: bold;
}

.controls {
  display: flex;
  justify-content: center;
}

.btn {
  padding: 8px 12px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-weight: bold;
  transition: all 0.2s ease;
  background-color: var(--fg-color);
  color: var(--bg-color);
}

.btn-primary {
  background-color: var(--btn-color);
  color: var(--bg-color);
}

.btn-primary.recording {
  background-color: var(--btn-stop-color);
  color: white;
}

.btn-secondary {
  background-color: var(--fg-color);
  color: var(--bg-color);
}

.btn:hover {
  opacity: 0.9;
}

.btn:active {
  transform: translateY(1px);
}

.btn.primary {
  background-color: var(--btn-color);
  color: var(--bg-color);
  padding: 10px 15px;
  font-size: 16px;
}

.recording .btn.primary {
  background-color: #C00000;
  color: white;
}

#toggleRecording {
  background-color: var(--fg-color);
  color: var(--bg-color);
  width: 100%;
  padding: 15px;
  font-size: 24px;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

#toggleRecording.recording {
  background-color: var(--btn-stop-color);
  color: var(--text-color);
}

.toast-container {
  position: fixed;
  bottom: 16px;
  left: 16px;
  right: 16px;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.toast {
  padding: 8px 12px;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border-radius: 4px;
  font-size: 12px;
  animation: fadeOut 3s forwards;
  margin-bottom: 8px;
}

.toast.error {
  background-color: rgba(192, 0, 0, 0.9);
}

@keyframes fadeOut {
  0% { opacity: 1; }
  70% { opacity: 1; }
  100% { opacity: 0; }
}

.toast.show {
  opacity: 1;
}

.status-container {
  display: flex;
  justify-content: space-between;
  background-color: var(--fg-color);
  padding: 8px;
  border-radius: 4px;
}

.status-text {
  font-weight: bold;
  color: var(--bg-color);
}

.counter {
  font-weight: bold;
  background-color: var(--fg-color);
  color: var(--bg-color);
}

.error {
  color: #ff6b6b;
}

#counter {
  font-size: 14px;
  color: var(--secondary-text);
  margin-left: 8px;
}

/* 统一所有输入框的样式 */
input {
  background-color: var(--fg-color);
  color: var(--bg-color);
  border: none;
  border-radius: 4px;
  transition: all 0.2s ease-in-out;
}

/* 统一所有按钮的悬停状态 */
button:hover, .btn:hover {
  opacity: 0.9;
  transition: opacity 0.2s ease;
}

/* 修改Hotkey中"按下组合键"的提示字体颜色 */
.setting-input::placeholder {
  color: var(--placeholder-color);
  transition: opacity 0.2s ease;
}

.setting-input:focus::placeholder {
  opacity: 0.7;
}

/* 去掉所有输入框的焦点轮廓 */
input:focus {
  outline: none;
  transform: scale(1.03);
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
}
